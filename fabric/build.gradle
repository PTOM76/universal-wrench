plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

archivesBaseName = archivesBaseName + "-" + "fabric"

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"
    modApi "dev.architectury:architectury-fabric:${rootProject.architectury_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }

    modApi "net.pitan76:mcpitanlib-fabric+${rootProject.mcpitanlib_version}"

    modImplementation 'RebornCore:RebornCore-1.20:5.8.7'
    modImplementation 'TechReborn:TechReborn-1.20:5.8.7'

    modImplementation("net.pitan76:itemalchemy:1.0.2") {
        exclude group: "me.shedaniel", module: "RoughlyEnoughItems-fabric"
        exclude group: "net.fabricmc", module: "fabric-api"
        exclude group: "net.fabricmc", module: "fabric-loader"
        exclude group: "dev.architectury", module: "architectury-fabric"
    }

    modImplementation("net.pitan76:EnhancedQuarries:1.5.0")
    modImplementation "curse.maven:speedy-path-1102702:5725739"
    modImplementation "curse.maven:bew76-1106172:5740315"
    modImplementation "curse.maven:modern-industrialization-405388:5562363"
    modImplementation "curse.maven:industrial-revolution-391708:5254377"

    modImplementation "appeng:appliedenergistics2-fabric:15.2.12"
    //modCompileOnly "appeng:appliedenergistics2-fabric:15.2.12:api"

    //modLocalRuntime  "me.shedaniel:RoughlyEnoughItems-fabric:12.1.770"

    //modImplementation "com.gregtechceu.gtceu:gtceu-fabric-1.20.1:1.0.20.b"
}

processResources {
    def map = [
            "mod_name": project.mod_name,
            "version": project.version,
            "mod_id": project.mod_id,
    ]
    inputs.properties map

    filesMatching("fabric.mod.json") {
        expand map
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set "dev-shadow"
}

remapJar {
    // injectAccessWidener = true
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set null
}

jar {
    archiveClassifier.set "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}